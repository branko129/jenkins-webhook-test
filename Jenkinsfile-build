podTemplate(containers: [
    containerTemplate(
        name: 'gradle',
        image: 'gradle:7.3.0-jdk17',
        command: 'sleep',args: '99d',
        resourceLimitCpu: '500m',
        resourceLimitMemory: '2048Mi'
    ),
    containerTemplate(
        name: 'docker-cmds',
        image: 'docker:1.12.6',
        command: 'docker', 'run', '-p', '80:80', 'httpd:latest',
        ttyEnabled: true,
        resourceLimitCpu: '100m',
        resourceLimitMemory: '200Mi'
    )
  ],
  volumes: [
       hostPathVolume(hostPath: '/var/run/dockershim.sock', mountPath: '/var/run/dockershim.sock')
  ],
  envVars: [
  secretEnvVar(key: 'uname', secretName: 'credrl', secretKey: 'username'),
  secretEnvVar(key: 'pwd', secretName: 'credrl', secretKey: 'password'),
  secretEnvVar(key: 'artifactoryUser', secretName: 'credrl', secretKey: 'username')
  ],
  imagePullSecrets:
  ['regcred']
   )
  {
    node(POD_LABEL) {
        stage('Get a Java project from git') {
            sh"git config --global http.sslverify false"
            sh"export GIT_SSL_NO_VERIFY=true"
            git branch: 'main', url: 'https://github.com/branko129/jenkins-webhook-test.git'
            script{
            latestTag = sh(returnStdout:  true, script: "git tag --sort=-creatordate | head -n 1").trim()
            latestHash = sh(returnStdout: true, script: "git rev-parse --short=10 HEAD").trim()
            env.GIT_COMMIT_MSG = sh (script: 'git log -1 --pretty=%B ${GIT_COMMIT}', returnStdout: true).trim()
            env.GIT_AUTHOR = sh (script: 'git log -1 --pretty=%cn ${GIT_COMMIT}', returnStdout: true).trim()
            env.BUILD_VERSION = latestTag
            env.HASH_TAG = latestHash
            echo "env-BUILD_VERSION = ${env.BUILD_VERSION}"
            echo "env-HASH_TAG = ${env.HASH_TAG}"
            echo "author = ${env.GIT_AUTHOR}"
            echo "commit message = ${env.GIT_COMMIT_MSG}"
            }
        }
        stage('Build image'){
             agent{
               kubernetes {
               apiVersion: v1
               kind: Pod
               metadata:
                 name: dind
                 namespace: jenkins
               spec:
                   containers:
                     - name: docker-cmds
                       image: docker:1.12.6
                       command: ['docker', 'run', '-p', '80:80', 'httpd:latest']
                       resources:
                          requests:
                              cpu: 10m
                              memory: 256Mi
                       env:
                         - name: DOCKER_HOST
                           value: tcp://localhost:2375
                     - name: dind-daemon
                       image: docker:1.12.6-dind
                       resources:
                           requests:
                               cpu: 20m
                               memory: 512Mi
                       securityContext:
                           privileged: true
                       volumeMounts:
                         - name: docker-graph-storage
                           mountPath: /var/lib/docker
                   volumes:
                     - name: docker-graph-storage
                       emptyDir: {}
               }
             }
             steps {
               container(docker-cmds)
                 sh 'echo "Radi!!!!!"'
             }
        }
        stage('Print something'){
           script{
              echo "Job successful"
           }
        }
    }
  }
